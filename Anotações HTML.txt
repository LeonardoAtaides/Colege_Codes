# Estruturas Principais de um site:
**1°** <html></html>
**2°** <head></head> *2.1* <meta></meta> *2.2* <title></title>
**3º** <body></body>

# Tags de Cabeçalho:
São utilizadas para formatações de textos
*Usada para definir Títulos* sendo 6 tamanhos de títulos
<h1>    <h2>   <h3>
<h4>    <h5>   <h6>

# Tags <br> e <hr>:
O <br> faz uma *quebra de linha*
O <hr> *Cria uma linha* na página

# A tag *<strong>* serve para deixa o texto em negrito
# A tag *<em>* serve para deixa o texto em itálico
# A tag *<u>* serve para deixa o texto em sublinhado
# A tag *<strike>* serve para deixa o texto riscado ao meio

# Listas

# Lista não ordenada: **<ul>**
- Dentro desta tag usa-se <li> para definir os itens
- onde não há uma ordem nos componentes da 
lista, sendo marcandos com *marcadores*
**Tipos de marcadores**
Usa-se a tag *type*:
- disc •
- circle ◦
- square  ■



# Lista ordenada **<ol>**
- Dentro desta tag usa-se <li> para definir os itens
- Segue uma ordem nos itens como ex: 1º, 2º e etc
**Tipos de marcadores**
Usa-se a tag *type*:
- 1 (1. 2. 3.)
- A ou a (A. B. C.)
- I ou i (I. II. III.)

# Inserir Imagens **<img>**
•Usa- se a <img> juntamente com  **src** e **alt**
- SRC onde busca a imagem
 - ALT se a imagem não aparecer serve com descrição

# Âncoras/ Links **<a>**
• Usa-se para criar novas páginas ou abrir links externos
- Dentro da tag temos:
*href=""* que busca de onde e o link
*target""* que é como está página vai abrir

**tipos de target**
1º *_blank-* abre o link em uma nova aba
2° *_parent* abre no link pai,se não tiver abre ns mesma aba
3° *_top*abre o link na janela inteira
4º *_self* abre o link na mesma aba (comportamento padrão)

# Tabela **<table>**
• Usa-se para criar tabelas
- Dentro da tag temos:
*border=""*-- para definir a borda
*width="%"* -- para definir a largura da tabela
*<tr>* -- para definir as linhas da tabela
*<td>* -- para definir os dados da tabela
*<th>* -- é cabeçalho da tabela
*colspan = ""* -- agrupa as colunas da tabela
*rowsoan=""* -- agrupa as linhas da tabela
*border-collapse: separate;* -- separa as colunas da tabela
*border-collapse: collapse;* -- junta as colunas da tabela

*letter-spacing: 0px* -- Da espaçamento entre os caracteres

# Formulário **<form>**
• Usa-se para criar formulários
*action=""* envia para devido lugar os dados ex: action="processo.php"

- Dentro da tag temos:
*<input>* -- é um campo de digitação de dados
 - *type=""*         

0 - **PlacaHolder** Deixa uma mensagem ao usário com o deve digitar e etc

1 - **Text** - texto

2 - **Passoword** - senha

3- **Button** - botão -- value(O valor/Atribui o nome que vai aparacer)

4- **Radio** - cria um botão de escolha redondo

5 - **Checkbox** -cria um quadrado de escolha(para escolha de +1 opção)
6 - **email** - não permite digitar o email sem o @

7 - **required** - exige que o campo seja preenchido antes de ser enviado

8 - **autofocus** - Destaca o campo a ser preenchido pelo usuário

9 - **number** - cria um input de escolha de números podendo aumentar ou diminuir, sendo possivel passar:
MÍNIMO:   |   MÁXIMO:  |   PULAR:   |
*min="0"* | *max="10"* | *step="2"* |

10 - **url** serve para colocar url, com https

11 - **Search** Serve para usuário realizar uma pesquisa

12 - **Range** E uma barra que aumenta e diminiu, sendo possivel:
MÍNIMO:   |   MÁXIMO:  | VALOR FIXO
*min="1"* | *max="3"*  | *value="2"*

13 - **Date** E uma barra que é possivel escolher uma data

14 - **Color** permite ao usuário escolher uma cor 

 - *name=""* - nome --  serve para passar o dados 
 
*<select>* -- define uma "lista" de escolha
-Dentro dessa tag temos <option> -- para definir vuma opção

*<textarea>* -- cria uma área de digitação para o usuário

# Escrever caracteres especiais:
**HTML ENTIDADES**:
< -- name(&lt;)	number(&#60;)
> -- name(&gt;) number(&#62;)
& -- name(&amp;) number(&#38;)
" -- name(&quot;) number(&#34;)
para mais pesquisar = "html entities"

# CSS:
*Existe 3 formas de css*
**External style sheet** -- Arquivo fora ex: pag.css(sendo necessário linkar)
# <link rel="stylesheet" href="pag.css">
**Internal style sheet** -- Estilo dentro do código
# <style> type="text/css"> </style>
**Inline style** -- Coloca o estilo dentro da linha com tag *style=""*
# <p style="color: red;">

# Classes e ID:
Classe - Identifica mais de um elemento
ID - identifica um elemento especifico dentro do código


# Divs e Span:
Div -- divisão cria um bloco de elementos
Span -- sendo mais usada para estilizar textos(deixando um do lado do outro)

# Estilos de bordas:
*solid* -- cria uma borda padrão
*dashed* -- cria uma borda fragmentada em retângulos
*dotted* -- cria uma borda fragmentada em bolinhas
*double* -- cria uma borda dupla
*groove* -- cria uma borda com sombra interna
*ridge* -- cria uma borda com sobra externa
*inset*/*outset* -- cria uma borda 3d com "degrade"
*none* -- não cria uma borda

# Color:
Usa-se no CSS para definir uma cor
*color*: red;
=================================================
# Font Family:
Usa-se no CSS para definir uma fonte dos textos
*font-family:* Arial, Helvetica, sans-serif;
=================================================
# Font-size
Usa-se no CSS para definir os tamanhos dos textos
*font-size:* 20px;
**medidas**
*px* -> tamanho fixo
*%* -> tamanho relativo
*em* -> tamanho relativo ao conteiner pai
=================================================
# font-weight
Usa-se para deixar o texto em 
*font-weight:* bold; bolder; 100 a 900;
=================================================
# font-style
Usa-se para denifir um estilo de fonte
*font-style:* italic; normal:
=================================================
#  text-decoration
Usa-se para fazer uma sublinhar o texto

*text-decoration:* underline; overline; line-through;
=================================================
# Background-Image
Usa-se para inserir uma imagem de fundo
**Usa URL para localizar a imagem**
*background-image: url('imgs/yoshi.png');*
#  Background-repeat
Usa-se para definir a repetição da imagem de fundo
*Background-repeat:* background-repeat; repeat x e y;
# Background-attachment:
Usa-se para definir a rolagem da imagem na página
*background-attachment:* fixed; scroll;
# Background-position
Usa-se para definir a posição da imagem na página
*background-position:*center; left center; right; center top; center bottom;

# Padding: espaçamento interno
**padding: 5px;**
*padding-top:* espaçamento de cima
*padding-right:* espaçamento a direita
*padding-bottom:* espaçamento de baixo
*padding-left:* espaçamento a esquerda

# Float: fazem que os conteúdos flutuem a esquerda e direita
float: right; left; none;

# Elementos Inline,Block e inline-block

**Inline** - um elemento ao lado do outro
Ex: <a>, <span>, <img>
-> A largura do elemento e de acordo com seu conteúdo
-> Se posionam-se um ao lado do outro

**Block**
Ex: <h1> , <p>, <table>
-> Obtém uma largura que ocupa todo o espaçamento da tela
-> Se posionam-se um embaixo do outro

**Inline-Block**
Ex: display: inline-block
-> A largura e definida baseada em seu conteúdo
-> Se posionam-se um embaixo do outro
-> quando acaba a linha do contéudo pula para linha
   de baixo

# Posicionamento estático, relativo, absoluto e fixo:

*position: static*
-> mantém o elemento estático no mesmo local(já vem por padrão)

*position: relative*
-> A posição fica relativa passivel de alteração
E NECESSÁRIO PROPRIEDADES PARA SE FAZER O DESLOCAMENTO
        **>> top, right, bottom, left <<**
Ex:
    position: relative;
    left: 20px;

*position: absolute*
-> Se sobrepõe as demais elementos
-> Acompanha a rolagem da tela

*position: fixed*
-> Se sobrepõe as demais elementos
-> Fica fixo na tela

# SOBREPOR ELEMENTOS

*z-index:*defini qual elemento aparece primeiro
com números 0, 1 , 2, 3...
**quanto maior o número mais ele se sobrepõe**

# FORMATAÇÃO DE LINKS
*Os links obtém estados*
*1°- Links Visitados*
Ex:
a:visited{
    color: red;
}

*2° - Links não visitados*
Ex:
a:link{
    color: red;
}

*3° - Links hover*
**Quando passa o cursor sobre o link**
a:hover{
    color: red;
}

*4° - Links Ativos*
**link ativo, quando clicado**
a:active{
    color: red;
}

# TIPOS DE SELETORES CSS

*Seletor Universal* - Aplica-se em todos os elementos no documento
Ex:
*{}
**Seleciona todos os elementos da página**

*Seletor de Texto* -  Seleciona elementos pelo tipo
Ex:
h1, h2, h3 {}
**Seleciona os elementos <h1>, <h2> e <h3>**

*Seletor de Classe* - Seleciona um elemento cujo atributo class tem o valor especificado depois do ponto
Ex:
.verde{}
**Seleciona qualquer elemento cujo atributo class tem o valor "verde"**
p.verde{}
**Seleciona somente elemento <p> cujo atributo class tem o valor "verde"**

*Seletor de ID* - Seleciona um elemento cujo atribuido id tem o valor especificado após ao símbolo de cerquilha ou jogo da velha
Ex:
#cabecalho{}
**Seleciona o elemento cujo atributo id tem o valor "cabecalho"**

*Seletor de filho* - Seleciona um elemento que é filho direto do outro
Ex:
li>a{}
**Seleciona quaisquer elementos <a> que são filhos de um elemento <li> (mas não outros elelementos na página)**

*Seletor de descendente* - Seleciona um elemento que é descendente de outro elemento especificado(e não apenas filho direto desse elemento)
Ex:
p a {}
**Seleciona quaisquer elementos <a> que residem dentro de um elemento <p>, mesmo se houver outros elementos aninhados entre eles**

*Seletor de irmão adjacente* - Seleciona um elemento que é o irmão próximo de outro
Ex:
h1 + p{}
**Seleciona o primeiro elemento <p> depois de qualquer elemento <h1> (mas não outros elementos <p>)**

*Seletor de irmão geral* - Seleciona um elemento que é um irmão de outro, embora ele não precise ser o elemento diretamente
Ex:
h1~p{}
**Se houvesse dois elementos <p> que fossem irmãos de um elemento <h1> essa regra se aplicaria ao dois**

# LINE HEIGHT
*Serve para alterar a altura da linha*
line-height: 0px;

# TEXT INDENT
*Serve para indentar o texto/movimentar*
text-indent: 0px;

# Tipos de Layout
Fixo: onde se define por *width: 0px;*
se mantendo fixo de acordo com o tamanho da janela

Líquido: Usa-se %, *width: 100%* para se tornar líquido
Se ajustando para ocupar toda a janela

**min-width:** usa-se para definir uma largura mínima
ao diminuir a janela de navegação.
**max-width:** usa-se para definir uam largura máxima
ao aumentar a janela de navegação.

**min-height:** usa-se para definir uma altura mínima
ao diminuir a janela de navegação.
**max-height:** usa-se para definir uma altura máxima
ao aumentar a janela de navegação.

*<fieldset>* -- Utilizado para agrupar dados semelhantes,como nome,email,telefone e etc
Ex:
__Detalhes de Contato___
| Nome:                 |
| Email:                | -> Cria está espécie de borda
| Telefone:             |
|_______________________|

# SELETOR DE ATRIBUTO []
*input[type=text]* - desta forma seelciona apenas inputs com tipo "text"
**sempre passando dentro de [] colchetes**

# PARALLAX
**Trabalha com camadas de imagens, dando expressão de movimento**
- Imagens são fixas e outras se sobrepõem a outra 

# FONTES CUSTOMIZADAS
- Usa-se qualquer site de fontes para localizar a desejada
**É necessário realizar uma conervsão de tipo na fonte para ".woff"**
- Vá até o GOOGLE e pesquise: *converter woof*

Para carregar a fonte com o css:

@font-face{
    font-family: "nome fonte" - *posso definir qualquer nome*
    src: url("NOMEFONTE.woff"); - *Para puxar a fonte usa-se src ou source*
}


# Normalize css
 - Usa-se pra deixar as configurações padrões para todos os navegadores
- Preserva as configurações padrões do navegadores
- Faz correções de bugs

link: https://necolas.github.io/normalize.css/
copia e cola seu conteúdo em um arquivo css e linkando
ao html:
Ex: 
<link rel="stylesheet" href="normalize.css">


# Border Radius
- Usa-se para definir um arrendondamento para um elemento
Ex:
- pode definir 4 valores sendo:
*border-radius: 0px 0px 0px 0px;*
                |    |   |  |-> para baixo a esquerda
                |    |   |-> para baixo a direita
                |    |-> para o topo a direira
                |-> para o topo a esquerda

**Existem navegadores que precisam de prefixos para usar a propriedade border radius**
# Prefix:
Chrome: -webkit- | -webkit-border-radius: 0px;
Mozilla: -moz-   | -moz-border-radius: 0px;
Safari: -webkit- | -webkit-border-radius: 0px;

# Border Sizing
- Usa-se para ajustar o tamanho da caixa, evitando que o padding aumente o tamanho da caixa

**Existem navegadores que precisam de prefixos para usar a propriedade border sizing**
# Prefix:
Chrome: -webkit- | -webkit-border-radius: 0px;
Mozilla: -moz-   | -moz-border-radius: 0px;
Safari: -webkit- | -webkit-border-radius: 0px;

# Transparencia
- Usa-se para dar um efeito de transparencia no elemento
Ex:
                               |-> *E NO FINAL DEFINA A PORCENTAGEM*
                               |    *DE TRANSPARÊNCIA*
background: rgb(255, 255, 255, 0.5);
                    |-> PASSA UM CÓDIGO DE COR

# Gradient
- Usa-se para fazer uma mistura de cores como especie de degrade
background: *linear-gradient*(color, color, color)

linear-gradient(to top, red, green, blue)
                  |      |-> Define-se três cores que vão 
                  |          ser utilizadas
                  |-> Define onde vai começar o degrade:
                        TO (*Top, Bottom, Left and Right*)
                                    ou em graus
                           *90deg, 50deg, 20deg, 10deg...*
                    
# Sombra, Text-shadow , Box Shadow
Usa-se para aplicar uma sombra em um texto
a sombra funciona como um background, sendo assim ela não empurra
os outros elementos
*text-shadow: 0px 0px color;*

**passe três argumentos na tag**
text-shadow: 0px 0px color;
                  |    |-> define a cor da sombra
             |    |-> controla a posição vertical( top e bottom)
             |-> controla a posição horizontal(left e right)

Pode usar *rgb* ou *rbga* para definir a opacidade da sombra
Ex:
text-shadow: 0px 0px rgb(0, 0, 0, 0.5);
                                    |-> passa o valor de 0 ate 1

Pode passar um terceiro argumento para denifir um blur na sombra
Ex:
text-shadow: 0px 0px 10px rgb(0, 0, 0, 0.8);
                      |-> passa um valor e já define o blur

*box-shadow: 5px 5px 8px 0px black;*
Usa-se da mesma maneira que text-shadow mais aqui
e possível passar um 4° argumento
Ex:
box-shadow: 5px 5px 8px 0px black;
                        |-> Define a proporção que a sombra se 
                            espalha no elemento


# Animações
Usa-se para dar uma animação ao um alemento
Ex:
*@keyframes nome-class/id*

    form{ *Estado Inicial* | Onde Começa a 
        background: gray;  | Animação
    }

    to{ *Estado Final*     | Onde Termina a 
        background: purple;| Animação
    }
**Dentro da class ou id define as tags**
1° - animation-name: animacao-caixa; | Busca o Nome da animação
2° - animation-duration: 5s;         | Define o Tempo da animação
3° - animation-delay: 3s;            | Define o delay da animação
4° - animation-iteration-count: 2;   | Define quantas vezes a animação ocorrerá
5° -animation-direction: alternate;  | Define a direção da animação

É possivel definir todos esse paramêtros em uma só linha:
animation: nome-class/id, 5s, 3s, 2 alternate;
            |              |  |   |    |-> direção da animação
            |              |  |   |-> quantidade de execução
            |              |  |-> tempo de delay
            |              |-> tempo de duração
            |-> nome da animação

# Transições
Usa-se a propriedade *transition* sendo passados tais argumentos:

transition: width 2s ;
             |    |-> O tempo de duração da animação
             |-> 1° elemento para a animação

**É possível passar vários elementos**
Ex:
*DE FORMA MANUAL*
transition: width 3s, background 3s ;
*TODOS OS ELEMENTOS*
transition: all 3s;
             |-> Para selecioanar tudo


# Tag Header
E uma tag para definir dentpo do site o cabeçalho do seu site
sem precisar utilizar uma div e um id para estilizar o mesmo, utilizando: 
*<header>*

# Tag Nav
E uma tag para definir dentro do site a navegação do seu site
sem precisar utilizar uma div e um id para estilizar o mesmo, utilizando: 
*<nav>*

# Tag Footer
E uma tag para definir dentro do site o footer do seu site
sem precisar utilizar uma div e um id para estilizar o mesmo, utilizando: 
*<footer>*

# Tag Article
e uma tag para colocar conteúdos que representam uma "postagem", podendo ser informações sobre a empresa.

#  Tag Section
E uma tag que permite voçê criar seções dentro do conteúdo site

# Tag Time
E uma tag para definir uma data

# Tag Aside
E uma tag para colocar conteúdos laterais no site

# Compatibilidade Com o Navegador Internet Explorer
*Html Shiv* Ajuda O Explorer a compreender as tags mais recentes como, header, nav, footer e etc
Link: https://github.com/aFarkas/html5shiv *para pegar os arquivos JavaScript*

# Flex Box
E um modo de layout, que torna a inclusão de elmentos dentro de um container de forma mais simples e flexivel. Usa-se a TAG <display:>
**<display: flex;>** Com o flex permite você alterar as direções das colunas usando: <flex-direction:>

*TENDO COMO ARGUMENTOS: ROW | ROW-REVERSE | COLUMN | COLUMN-REVERSE*

1° - *Row:* Deixa os elementos um ao lado do outro de maneira horizontal

2° - *Row-Reverse:* Deixa os elementos um ao lado do outro de maneira horizontal, mas de forma invertida ao lado direito da tela

3° - *Column:* Deixa os elementos em forma de coluna um embaixo do outro de maneira vertical

3° - *Column-Reverse:* Deixa os elementos em forma de coluna um embaixo do outro de maneira vertical, mas invertendo a ordem dos elementos

Permite que você defina a quebra dos elementos usando: <flex-wrap:>
*TENDO COMO ARGUMENTOS: NOWRAP | WRAP | WRAP-REVERSE*
**Trabalha junto ao width do container**

1° - *nowrap*: Se o width for menor que a largura dos elementos ele os comprimi para caber um ao lado do outro.

2° - *wrap*: Se o width for menor que a largura dos elementos ele vai permitir a quebra jogando os elementos para baixo.

3° - *wrap-reverse*: Se o width for menor que a largura dos elementos ele vai permitir a quebra jogando os elementos para baixo, mas com a ordem invertida.


Permite que você defina a posção dos elementos usando: <justify-content>
*TENDO COMO ARGUMENTOS: FLEX-START | FLEX-END | CENTER | SPACE-BETWWEN | SPACE-AROUND*

1° - *flex-start*: É um alinhamento que já vem definido como padrão, alinhado no canto superior esquerdo

2° - *flex-end*: É um alinhamento que fica no canto superio a direita

3° - *center*: É um alinhamento que permite centralizar os elementos

4° - *space-between*: É um alinhamneto que distribui os itens adicionado um espaçamento entre eles, os itens das pontas ficam colados nos cantos

5° - *space-around*: É um alinhamneto que distribui os itens adicionado um espaçamento entre eles, os itens das pontas NÃO ficam colados nos cantos , mas com certo espaçamento.

**Align-items**
Permite que voçe ajuste a posição de um determinador container, sendo motidos sna vertical

1° - *stretch*: É pcionamento que fica esticado

2° - *center*: 

3° - *flex-start*: 

4° - *flex-end*: 

5° - *baseline*: 
